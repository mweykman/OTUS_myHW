---
- name: OSPF
  hosts: all
  #Параметр выполнения модулей от root-пользователя
  become: yes
  #Указание файла с дополнителыми переменными (понадобится при добавлении темплейтов)
  vars_files:
    - defaults/main.yml
  tasks:
  # Обновление пакетов и установка nano, traceroute, tcpdump, net-tools
  - name: install base tools
    apt:
      name:
        - nano
        - traceroute
        - tcpdump
        - net-tools
      state: present
      update_cache: true

#Отключаем UFW и удаляем его из автозагрузки
  - name: disable ufw service
    service:
      name: ufw
      state: stopped
      enabled: false
# Добавляем gpg-key репозитория
  - name: add gpg frrouting.org
    apt_key:
      url: "https://deb.frrouting.org/frr/keys.asc"
      state: present
# Добавляем репозиторий https://deb.frrouting.org/frr
  - name: add frr repo
    apt_repository:
      repo: 'deb https://deb.frrouting.org/frr {{ansible_distribution_release }} frr-stable'
      state: present
# Обновляем пакеты и устанавливаем FRR
  - name: install FRR packages
    apt:
      name:
        - frr
        - frr-pythontools
      state: present
      update_cache: true
# Включаем маршрутизацию транзитных пакетов
  - name: set up forward packages across routers
    sysctl:
      name: net.ipv4.conf.all.forwarding
      value: '1'
      state: present
# Включение блокировки ассиметричного режима
  - name: set up synchronous routing
    sysctl:
      name: net.ipv4.conf.all.rp_filter
      value: '1'
      state: present
    when: symmetric_routing == true
    tags:
      - setup_ospf
# Выключение блокировки ассиметричного режима
  - name: set up asynchronous routing
    sysctl:
      name: net.ipv4.conf.all.rp_filter
      value: '0'
      state: present
    when: symmetric_routing == false
    tags:
      - setup_ospf    
# Копируем файл daemons на хосты, указываем владельца и права
  - name: base set up OSPF
    template:
      src: templates/daemons
      dest: /etc/frr/daemons
      owner: frr
      group: frr
      mode: 0640
# Копируем файл frr.conf на хосты, указываем владельца и права с помощью Jinja2
  - name: set up OSPF
    template:
      src: frr.conf.j2
      dest: /etc/frr/frr.conf
      owner: frr
      group: frr
      mode: 0640
    tags:
      - setup_ospf
# Копируем файл frr.conf на хост 'router1', указываем владельца и права
#  - name: set up OSPF R1
#    template:
#      src: templates/frr.conf1
#      dest: /etc/frr/frr.conf
#      owner: frr
#      group: frr
#      mode: 0640
#    when: (ansible_hostname == 'router1')
# Копируем файл frr.conf на хост 'router2', указываем владельца и права
#  - name: set up OSPF R2
#    template:
#      src: templates/frr.conf2
#      dest: /etc/frr/frr.conf
#      owner: frr
#      group: frr
#      mode: 0640
#    when: (ansible_hostname == 'router2')
# Копируем файл frr.conf на хост 'router3', указываем владельца и права
#  - name: set up OSPF R3
#    template:
#      src: templates/frr.conf3
#      dest: /etc/frr/frr.conf
#      owner: frr
#      group: frr
#      mode: 0640
#    when: (ansible_hostname == 'router3')
# Перезапускам FRR и добавляем в автозагрузку
  - name: restart FRR
    service:
      name: frr
      state: restarted
      enabled: true
    tags:
      - setup_ospf