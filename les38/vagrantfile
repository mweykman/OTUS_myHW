MACHINES = {
  :backup => {
    :box_name => "centos/7",
    :vm_name => "backup",
    :cpus => 2,
    :memory => 2048,
    :disks => {
      :sata1 => {
        :dfile => 'sata1.vdi',
        :size => 2048,
        :port => 1
      },
    },  
    :net => [
            {ip: '192.168.56.10'},
            ]
  },
  :client => {
    :box_name => "centos/7",
    :vm_name => "client",
    :cpus => 2,
    :memory => 2048,
    :net => [
            {ip: '192.168.56.15'},
            ]
    },        
}
Vagrant.configure("2") do |config|
    MACHINES.each do |boxname, boxconfig|
        #config.vm.synced_folder ".", "/vagrant", disabled: true
        config.vm.define boxname do |box|
          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxconfig[:vm_name]
          box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh                
          SHELL
          boxconfig[:net].each do |ipconf|
            box.vm.network "private_network", ipconf
          end
          box.vm.provider :virtualbox do |vb|
            vb.memory = boxconfig[:memory]
            vb.cpus = boxconfig[:cpus]
            vb.customize ["storagectl", :id, "--name", "SATA controller", "--add", "sata" ] #create SATA controller
            if boxconfig[:vm_name] == "backup" 
              boxconfig[:disks].each do |dname, dconf|
              unless File.exist?(dconf[:dfile])
                vb.customize ['createmedium', '--filename', dconf[:dfile], '--size', dconf[:size], '--variant', 'Standard'] #create disk
                vb.customize ['storageattach', :id,  '--storagectl', 'SATA controller', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]] #attach Disks to SATA controller
              end
            end    
            end
          end          
          if boxconfig[:vm_name] == "client" #загружена последняя ВМ
            box.vm.provision "ansible" do |ansible|
              ansible.playbook = "playbook.yml"
              ansible.inventory_path = "hosts"
              ansible.host_key_checking = "false"
              ansible.limit = "all"
            end
          end
       end
    end
end