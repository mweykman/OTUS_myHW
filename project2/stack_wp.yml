version: "3.5"

services:
### Base of WP
  database:
    image: mysql:8.0 # используем готовый образ mysql от разработчиков
    container_name: database
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: wp_data # Имя и пароль базы данных будут задаваться в отдельном .env файле
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_pass
    secrets:
      - mysql_pass
    volumes:
      - ./DBdata:/var/lib/mysql # Чтобы данные базы не пропали при остановке/удалении контейнера, будем сохранять их на хост-машине
      - ./DBconf/conf.d:/etc/mysql/conf.d #переносим конфиги в контейнер
#    command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - app-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.labels.TAG==wp"
          - "node.hostname==Server1"

### WordPress  
  wordpress:
    image: wordpress:5.1.1-fpm-alpine # официальный образ от разработчиков
    container_name: wordpress
    restart: unless-stopped
  # на странице образа в docker hub написано, какие можно задать переменные контейнеру https://hub.docker.com/_/wordpress
    ports:
      - 80:80
    environment:
      WORDPRESS_DB_HOST: database
      WORDPRESS_DB_NAME: wp_data
      WORDPRESS_DB_USER: root
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_pass
    secrets:
      - mysql_pass
    volumes:
      - ./wordpress:/var/www/html # сохраняем приложение на хост машине
    networks:
      - app-network
    depends_on:
      - database # контейнер wordpress дождется запуска БД
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.labels.TAG==wp"
          - "node.hostname==Server1"


networks:
    app-network:
      name: app-network
      driver: bridge

secrets:
  mysql_pass:
    external: true





version: '3.5'

services:

  wordpress:
    image: wordpress
    restart: unless-stopped
    ports:
      - 8080:80
    environment:
      WORDPRESS_DB_HOST: db_master
      WORDPRESS_DB_USER: otus
      WORDPRESS_DB_PASSWORDPFILE: /run/secrets/mysql_pass
      WORDPRESS_DB_NAME: wp_db
    secrets:
      - mysql_pass
    volumes:
      - wordpress:/var/www/html
    deploy:
      replicas: 2
      placement:
        constraints:
          - "node.labels.TAG==wp"
    depends_on:
      - db_master


  db_master:
    image: mysql:5.7
    restart: unless-stopped
    ports:
      - 1441:3306  
    command: [ "mysqld", "--loose-group-replication-local-address=db_master:6606" ]  
    environment:
      MYSQL_DATABASE: wp_db
      MYSQL_USER: otus
      MYSQL_PASSWORD: mysql_pass
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_pass
    secrets:
      - mysql_pass
    volumes:
      - db:/var/lib/mysql
    configs:
      - source: DB_01_server1
        target: /etc/mysql/conf.d/01-base.cnf
      - source: DB_02_server1
        target: /etc/mysql/conf.d/02-max-connections.cnf
      - source: DB_03_server1
        target: /etc/mysql/conf.d/03-perfomance.cnf
      - source: DB_04_server1
        target: /etc/mysql/conf.d/04-slow-query.cnf
      - source: DB_05_server1
        target: /etc/mysql/conf.d/05-binlog.cnf
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.labels.TAG==wp"
          - "node.hostname==Server1"

  db_slave:
    image: mysql:5.7
    restart: unless-stopped
    ports:
      - 1442:3306  
    command: [ "mysqld", "--loose-group-replication-local-address=db_slave:6606" ]  
    environment:
      MYSQL_DATABASE: wp_db
      MYSQL_USER: otus
      MYSQL_PASSWORD: mysql_pass
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_pass
    secrets:
      - mysql_pass
    volumes:
      - db:/var/lib/mysql
    configs:
      - source: DB_01_server2
        target: /etc/mysql/conf.d/01-base.cnf
      - source: DB_02_server1
        target: /etc/mysql/conf.d/02-max-connections.cnf
      - source: DB_03_server1
        target: /etc/mysql/conf.d/03-perfomance.cnf
      - source: DB_04_server1
        target: /etc/mysql/conf.d/04-slow-query.cnf
      - source: DB_05_server2
        target: /etc/mysql/conf.d/05-binlog.cnf       
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.labels.TAG==wp"
          - "node.hostname==Server2"
          
volumes:
  wordpress:
  db:

secrets:
  mysql_pass:
    external: true
    
configs:
  DB_01_server1:
    external: true
  DB_02_server1:
    external: true
  DB_03_server1:
    external: true
  DB_04_server1:
    external: true
  DB_05_server1:
    external: true
  DB_01_server2:
    external: true
#  DB_02_server2:
#    external: true
#  DB_03_server2:
#    external: true
#  DB_04_server2:
#    external: true
  DB_05_server2:
    external: true